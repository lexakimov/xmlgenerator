name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: write

jobs:
  check-branch:
    runs-on: ubuntu-latest
    outputs:
      on_master: ${{ steps.check.outputs.on_master }}
    steps:
      - name: Check out repository code on master
        uses: actions/checkout@v4
        with:
          ref: 'master'
          fetch-depth: 0

      - name: Check if tag commit is on master branch
        id: check
        run: |
          # Get the commit SHA of the pushed tag
          TAG_COMMIT_SHA=$(git rev-parse ${{ github.ref }})
          echo "Tag commit SHA: $TAG_COMMIT_SHA"

          # Check if this commit is an ancestor of the master branch HEAD (current checkout)
          # Use 'git branch --contains <commit>' is another way, but requires fetching all branches potentially
          if git merge-base --is-ancestor $TAG_COMMIT_SHA HEAD; then
            echo "Tag commit is on master branch."
            echo "on_master=true" >> $GITHUB_OUTPUT
          else
            echo "Tag commit is NOT on master branch."
            echo "on_master=false" >> $GITHUB_OUTPUT
          fi

  test:
    needs: check-branch
    if: needs.check-branch.outputs.on_master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code for the tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run tests with pytest
        run: |
          pytest

  build-package:
    needs:
      - check-branch
      - test
    if: needs.check-branch.outputs.on_master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code for the tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/

  build-native:
    needs:
      - check-branch
      - test
    if: needs.check-branch.outputs.on_master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code for the tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build

      - name: Build native
        run: |
          python build_native.py
          mv dist_native/xmlgenerator dist_native/xmlgenerator-linux-amd64

      - name: Upload native artifact
        uses: actions/upload-artifact@v4
        with:
          name: native-binary
          path: dist_native/xmlgenerator-linux-amd64

  create-release:
    needs:
      - check-branch
      - build-package
      - build-native
    if: needs.check-branch.outputs.on_master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download Python packages
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist

      - name: Download native binary
        uses: actions/download-artifact@v4
        with:
          name: native-binary
          path: dist_native

      - name: Create Release
        uses: softprops/action-gh-release@v2
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.ref_name }}
          files: |
            dist/*.whl
            dist/*.tar.gz
            dist_native/xmlgenerator-linux-amd64

  publish-package:
    needs:
      - check-branch
      - build-package
    if: needs.check-branch.outputs.on_master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download Python packages
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
